{"ast":null,"code":"var pathGetter = require('./path-getter');\nvar jsan = require('./');\nexports.getRegexFlags = function getRegexFlags(regex) {\n  var flags = '';\n  if (regex.ignoreCase) flags += 'i';\n  if (regex.global) flags += 'g';\n  if (regex.multiline) flags += 'm';\n  return flags;\n};\nexports.stringifyFunction = function stringifyFunction(fn, customToString) {\n  if (typeof customToString === 'function') {\n    return customToString(fn);\n  }\n  var str = fn.toString();\n  var match = str.match(/^[^{]*{|^[^=]*=>/);\n  var start = match ? match[0] : '<function> ';\n  var end = str[str.length - 1] === '}' ? '}' : '';\n  return start.replace(/\\r\\n|\\n/g, ' ').replace(/\\s+/g, ' ') + ' /* ... */ ' + end;\n};\nexports.restore = function restore(obj, root) {\n  var type = obj[0];\n  var rest = obj.slice(1);\n  switch (type) {\n    case '$':\n      return pathGetter(root, obj);\n    case 'r':\n      var comma = rest.indexOf(',');\n      var flags = rest.slice(0, comma);\n      var source = rest.slice(comma + 1);\n      return RegExp(source, flags);\n    case 'd':\n      return new Date(+rest);\n    case 'f':\n      var fn = function () {\n        throw new Error(\"can't run jsan parsed function\");\n      };\n      fn.toString = function () {\n        return rest;\n      };\n      return fn;\n    case 'u':\n      return undefined;\n    case 'e':\n      var error = new Error(rest);\n      error.stack = 'Stack is unavailable for jsan parsed errors';\n      return error;\n    case 's':\n      return Symbol(rest);\n    case 'g':\n      return Symbol.for(rest);\n    case 'm':\n      return new Map(jsan.parse(rest));\n    case 'l':\n      return new Set(jsan.parse(rest));\n    case 'n':\n      return NaN;\n    case 'i':\n      return Infinity;\n    case 'y':\n      return -Infinity;\n    default:\n      console.warn('unknown type', obj);\n      return obj;\n  }\n};","map":{"version":3,"names":["pathGetter","require","jsan","exports","getRegexFlags","regex","flags","ignoreCase","global","multiline","stringifyFunction","fn","customToString","str","toString","match","start","end","length","replace","restore","obj","root","type","rest","slice","comma","indexOf","source","RegExp","Date","Error","undefined","error","stack","Symbol","for","Map","parse","Set","NaN","Infinity","console","warn"],"sources":["C:/Users/123/OneDrive/Desktop/git practice/git_destop/git-Check/testing/node_modules/jsan/lib/utils.js"],"sourcesContent":["var pathGetter = require('./path-getter');\nvar jsan = require('./');\n\nexports.getRegexFlags = function getRegexFlags(regex) {\n  var flags = '';\n  if (regex.ignoreCase) flags += 'i';\n  if (regex.global) flags += 'g';\n  if (regex.multiline) flags += 'm';\n  return flags;\n};\n\nexports.stringifyFunction = function stringifyFunction(fn, customToString) {\n  if (typeof customToString === 'function') {\n    return customToString(fn);\n  }\n  var str = fn.toString();\n  var match = str.match(/^[^{]*{|^[^=]*=>/);\n  var start = match ? match[0] : '<function> ';\n  var end = str[str.length - 1] === '}' ? '}' : '';\n  return start.replace(/\\r\\n|\\n/g, ' ').replace(/\\s+/g, ' ') + ' /* ... */ ' + end;\n};\n\nexports.restore = function restore(obj, root) {\n  var type = obj[0];\n  var rest = obj.slice(1);\n  switch(type) {\n    case '$':\n      return pathGetter(root, obj);\n    case 'r':\n      var comma = rest.indexOf(',');\n      var flags = rest.slice(0, comma);\n      var source = rest.slice(comma + 1);\n      return RegExp(source, flags);\n    case 'd':\n      return new Date(+rest);\n    case 'f':\n      var fn = function() { throw new Error(\"can't run jsan parsed function\") };\n      fn.toString = function() { return rest; };\n      return fn;\n    case 'u':\n      return undefined;\n    case 'e':\n      var error = new Error(rest);\n      error.stack = 'Stack is unavailable for jsan parsed errors';\n      return error;\n    case 's':\n      return Symbol(rest);\n    case 'g':\n      return Symbol.for(rest);\n    case 'm':\n      return new Map(jsan.parse(rest));\n    case 'l':\n      return new Set(jsan.parse(rest));\n    case 'n':\n      return NaN;\n    case 'i':\n      return Infinity;\n    case 'y':\n      return -Infinity;\n    default:\n      console.warn('unknown type', obj);\n      return obj;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}