{"ast":null,"code":"var Emitter = require('component-emitter');\nvar SCChannel = function (name, client, options) {\n  var self = this;\n  Emitter.call(this);\n  this.PENDING = 'pending';\n  this.SUBSCRIBED = 'subscribed';\n  this.UNSUBSCRIBED = 'unsubscribed';\n  this.name = name;\n  this.state = this.UNSUBSCRIBED;\n  this.client = client;\n  this.options = options || {};\n  this.setOptions(this.options);\n};\nSCChannel.prototype = Object.create(Emitter.prototype);\nSCChannel.prototype.setOptions = function (options) {\n  if (!options) {\n    options = {};\n  }\n  this.waitForAuth = options.waitForAuth || false;\n  this.batch = options.batch || false;\n  if (options.data !== undefined) {\n    this.data = options.data;\n  }\n};\nSCChannel.prototype.getState = function () {\n  return this.state;\n};\nSCChannel.prototype.subscribe = function (options) {\n  this.client.subscribe(this.name, options);\n};\nSCChannel.prototype.unsubscribe = function () {\n  this.client.unsubscribe(this.name);\n};\nSCChannel.prototype.isSubscribed = function (includePending) {\n  return this.client.isSubscribed(this.name, includePending);\n};\nSCChannel.prototype.publish = function (data, callback) {\n  this.client.publish(this.name, data, callback);\n};\nSCChannel.prototype.watch = function (handler) {\n  this.client.watch(this.name, handler);\n};\nSCChannel.prototype.unwatch = function (handler) {\n  this.client.unwatch(this.name, handler);\n};\nSCChannel.prototype.watchers = function () {\n  return this.client.watchers(this.name);\n};\nSCChannel.prototype.destroy = function () {\n  this.client.destroyChannel(this.name);\n};\nmodule.exports.SCChannel = SCChannel;","map":{"version":3,"names":["Emitter","require","SCChannel","name","client","options","self","call","PENDING","SUBSCRIBED","UNSUBSCRIBED","state","setOptions","prototype","Object","create","waitForAuth","batch","data","undefined","getState","subscribe","unsubscribe","isSubscribed","includePending","publish","callback","watch","handler","unwatch","watchers","destroy","destroyChannel","module","exports"],"sources":["C:/Users/123/OneDrive/Desktop/git practice/git_destop/git-Check/testing/node_modules/sc-channel/index.js"],"sourcesContent":["var Emitter = require('component-emitter');\n\nvar SCChannel = function (name, client, options) {\n  var self = this;\n\n  Emitter.call(this);\n\n  this.PENDING = 'pending';\n  this.SUBSCRIBED = 'subscribed';\n  this.UNSUBSCRIBED = 'unsubscribed';\n\n  this.name = name;\n  this.state = this.UNSUBSCRIBED;\n  this.client = client;\n\n  this.options = options || {};\n  this.setOptions(this.options);\n};\n\nSCChannel.prototype = Object.create(Emitter.prototype);\n\nSCChannel.prototype.setOptions = function (options) {\n  if (!options) {\n    options = {};\n  }\n  this.waitForAuth = options.waitForAuth || false;\n  this.batch = options.batch || false;\n\n  if (options.data !== undefined) {\n    this.data = options.data;\n  }\n};\n\nSCChannel.prototype.getState = function () {\n  return this.state;\n};\n\nSCChannel.prototype.subscribe = function (options) {\n  this.client.subscribe(this.name, options);\n};\n\nSCChannel.prototype.unsubscribe = function () {\n  this.client.unsubscribe(this.name);\n};\n\nSCChannel.prototype.isSubscribed = function (includePending) {\n  return this.client.isSubscribed(this.name, includePending);\n};\n\nSCChannel.prototype.publish = function (data, callback) {\n  this.client.publish(this.name, data, callback);\n};\n\nSCChannel.prototype.watch = function (handler) {\n  this.client.watch(this.name, handler);\n};\n\nSCChannel.prototype.unwatch = function (handler) {\n  this.client.unwatch(this.name, handler);\n};\n\nSCChannel.prototype.watchers = function () {\n  return this.client.watchers(this.name);\n};\n\nSCChannel.prototype.destroy = function () {\n  this.client.destroyChannel(this.name);\n};\n\nmodule.exports.SCChannel = SCChannel;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}